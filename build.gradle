plugins {
    id 'java-library'
    id 'application'
}


group 'com.paipeng'
version '1.0.1'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
    api group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.24'
    // https://mvnrepository.com/artifact/org.apache.pdfbox/fontbox
    api group: 'org.apache.pdfbox', name: 'fontbox', version: '2.0.24'
    // https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox-tools
    api group: 'org.apache.pdfbox', name: 'pdfbox-tools', version: '2.0.24'
    // https://mvnrepository.com/artifact/org.apache.pdfbox/preflight
    api group: 'org.apache.pdfbox', name: 'preflight', version: '2.0.24'

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}


project.configurations.implementation.setCanBeResolved(true)
task fatJar(type: Jar) {
    println "my fatjar"
    manifest {
        attributes 'Main-Class' : 'com.paipeng.pdfprint.App',
                'Class-Path': configurations.implementation.collect {"$it.name"}.join(' ')
    }

    baseName = project.name + '-all'
    from {
        configurations.implementation.collect {
            if (!it.toString().contains("sources") && !it.toString().contains("junit") && !it.toString().contains("ant") ) {
                println it.getName()
                it.isDirectory() ? it : zipTree(it)
            }
        }
    }

    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'LICENSE.txt'
    with jar
}

test {
    useJUnitPlatform()
}